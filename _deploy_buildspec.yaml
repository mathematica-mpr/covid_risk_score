version: 0.2
phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=${ContainerRepositoryName}
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Building the Docker image...
      - export apiKey=X_API_KEY
      - paramname=$(aws ssm get-parameter --name $apiKey  --query "Parameter.Name" --output text)
      - paramvalue=$(aws ssm get-parameter --name $apiKey --query "Parameter.Value" --output text)
      - result=${paramname}=${paramvalue} > .
      - echo ${result}
      - docker build -f web.Dockerfile -t $REPOSITORY_URI:latest .
      - echo Tagging the Docker image...
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  
  post_build:
    commands:
      # - echo Test docker image 
      # - docke run -p 3838:3838 $REPOSITORY_URI:$IMAGE_TAG
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file used during deployment to pick new tasks ...
      - printf '[{"name":"Shiny-Container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json